<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="https://jakarta.ee/xml/ns/persistence"
		    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		    xsi:schemaLocation="https://jakarta.ee/xml/ns/persistence 
		                        https://jakarta.ee/xml/ns/persistence/persistence_3_0.xsd"
		    version="3.0">
	<!-- 영속성관리 -->
	<persistence-unit name="JpaEx01" transaction-type="RESOURCE_LOCAL">
		<!-- <class>exam2.Member2</class>
		<class>exam1.Member1</class>
		<class>exam3.Member3</class> 
		<class>exam4.Member4</class>-->
		<class>exam5.Member5</class>
	
		<exclude-unlisted-classes>true</exclude-unlisted-classes>
		
		<properties>
			<!-- 필수 : DB설정 -->
			<property name="jakarta.persistence.jdbc.driver"
					  value="oracle.jdbc.OracleDriver" />
			<property name="jakarta.persistence.jdbc.url"
					  value="jdbc:oracle:thin:@localhost:1521/xe" />
			<property name="jakarta.persistence.jdbc.user" value="springboot" />
			<property name="jakarta.persistence.jdbc.password" value="springboot" />
		
		
			<!-- 
			ORM의 가장 큰 특징은 객체 맵핑을 통해 자동으로 쿼리를 작성해 주는 것
			  - dialect : DB의 종류에 따라 최적화된 쿼리를 자동으로 작성해 주는 클래스
			    데이타베이스 마다 쿼리문이 조금씩 다르기 때문에 이를 알려한 한다(DB의 유형을 지정)
			 -->	 
			<property name="hibernate.dialect"
					  value="org.hibernate.dialect.OracleDialect" />
			<property name="hibernate.show_sql" value="true" />
            <property name="hibernate.format_sql" value="true" />
            <property name="hibernate.id.new_generator_mappings" value="true" />
			<!-- 
			hibernate.hbm2ddl.auto : 테이블을 생성, 변경, 삭제와 같은 ddl구문을 자동으로 실행할지 지정
				- none : ddl을 사용하지 않는다
				- create : 기존에 테이블이 있으면 drop -> create(특히 조심해야함. 기존 데이터가 모두 없어짐)
							기존 테이블이 없으면 create
				- create-drop : 기존에 테이블이 있으면 drop -> create -> drop 애플리케이션이 종료되기 직전에 테이블 삭제
				- update : 기존테이블이 있으면 그냥 사용. 없으면 새로 생성. 매핑설정이 변경되면 자동으로 내용만 반영(alter)
				
			 -->
			<property name="hibernate.hbm2ddl.auto" value="none"/>	<!-- value:create(테이블새로생성)/none --> 
		</properties>
	</persistence-unit>	 
</persistence>